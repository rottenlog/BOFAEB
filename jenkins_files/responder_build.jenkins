#!groovy

properties([disableConcurrentBuilds()])

pipeline {
    agent
    {
        label 'master'
    }
    options
    {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages
    {
        stage("Remove old code")
        {
            steps
            {
                echo "======================== Delete Code ========================"
                sh 'ssh ivanlogna@158.160.100.62 rm -r /home/ivanlogna/BOFAEB'
            }
        }
        stage("Kill old container")
        {
            steps
            {
                echo "======================== Kill Old Container ========================"
                sh 'ssh ivanlogna@158.160.100.62 docker stop bot_respondent'
            }
        }
        stage("Clone new code from GitHub")
        {
            steps
            {
                echo "======================== Download Code ========================"
                sh 'ssh ivanlogna@158.160.100.62 git clone https://github.com/rottenlog/BOFAEB.git'
            }
        }
        stage("Clone file with token, ip, etc")
        {
            steps
            {
                echo "======================== Clone file with data ========================"
                sh 'ssh ivanlogna@158.160.100.62 cp /home/ivanlogna/botVars.txt /home/ivanlogna/BOFAEB/botVars.txt'
            }
        }
        stage("Build docker file")
        {
            steps
            {
                echo "======================== Build Docker ========================"
                sh 'ssh ivanlogna@158.160.100.62 docker build ./BOFAEB/ -t bot_respondent'
            }
        }
        stage("Run new bot")
        {
            steps
            {
                echo "======================== Run New Bot ========================" 
                sh 'ssh ivanlogna@158.160.100.62 docker run --name bot_respondent bot_respondent'
            }
        }  
    }
}